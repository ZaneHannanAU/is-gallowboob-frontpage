var Options
if (location.search.indexOf('?') === 0) {
	var points = location.search.slice(1).split('&')
	points.forEach((s, i) => {
		points[i] = s.split('=')
		points[i][0] = points[i][0].toLocaleLowerCase()
	})
	Options = new Map(points)
} else {
	Options = new Map()
}

const qs = q => document.querySelector(q)
const qsa = qa => document.querySelectorAll(qa)
const ce = el => document.createElement(el)

var posts = qs('#posts'),
	allusers = qs('#allusers'),
	answer = qs('#answer'),
	title = qs('#title'),
	users = qs('#users'),
	limit = Options.get('limit') || 50,
	sr = Options.get('sr') || 'all',
	user = Options.get('user') || 'GallowBoob',
	isFront = false,
	Ea = ce('a'),
	Ediv = ce('div'),
	Edt = ce('dt'),
	Edd = ce('dd'),
	a, li, div, dt, dd, loggable = [], allUsers = []

title.innerHTML = `Is <a href="/u/${user}">/u/${user}</a> on the front page of ${sr === 'all' ? 'reddit' : `<a href="/r/${sr}">r/${sr}</a>`}?`
document.title = title.innerText


var addPost = (post, i, array, father) => {
		a = Ea.cloneNode(true)
		dt = Edt.cloneNode(true)
		dd = Edd.cloneNode(true)
		div = Ediv.cloneNode(true)

		div.dataset.score = post.data.score
		div.dataset.rank = 1+i
		div.dataset.sr = post.data.subreddit

		a.href = `/u/${post.data.author}`
		a.innerText = `/u/${post.data.author}`
		dt.appendChild(a)
		div.appendChild(dt)

		a = Ea.cloneNode(true)
		a.href = post.data.permalink
		a.innerHTML = post.data.title
		dd.value = post.data.score
		dd.appendChild(a)
		div.appendChild(dd)
		return father.appendChild(div)
	}

fetch(`https://www.reddit.com/r/${sr}/.json?limit=${limit}`)
	.then(res => res.json())
	.then(postList => postList.data.children.forEach((post, i) => {
		loggable.push(post)
		if (post.data.author.toLocaleLowerCase() === user.toLocaleLowerCase()) {
			addPost(post, i, [], posts)
			isFront = true
		}
	}))
	.then(() => {
		answer.innerText = isFront ? 'Yes:' : 'No.'
		console.log(loggable)
		loggable.forEach((post, i, posts) => addPost(post, i, posts, users))
		allusers.innerHTML = `The top ${loggable.length} users on <a href="/r/${sr}">r/${sr}</a> in default sort:`
	})
